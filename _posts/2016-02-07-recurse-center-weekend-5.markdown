---
published: true
title: Recurse Center, Weekend 5!
layout: post
---
Busy week last week! It probably *felt* more productive than it actually *was*, but oh well. What did I accomplish? I fooled around a bit in Clojure. I wrote some crappy Python to make two-thirds of a symbolic differentiator. I found out that there's [an (archived) EdX course about functional programming via Haskell](https://www.edx.org/course/introduction-functional-programming-delftx-fp101x-0), taught by [Erik Meijer](https://en.wikipedia.org/wiki/Erik_Meijer_(computer_scientist)), who has 1) the most wonderful gestures ( 1a) especially when they're blue-screened in front of random slides), and 2) the most wonderful shirts. 

I found a [dataset of every fire department in New York State](https://data.ny.gov/Public-Safety/Fire-Department-Directory-for-New-York-State/qfsu-zcpv) on NYS's open data website, and changed a few lines in [someone's visualization of every supermarket in the UK](https://chriszetter.com/blog/2014/06/15/building-a-voronoi-map-with-d3-and-leaflet/) (wtf) to make a Voronoi map of every fire department in New York State! Which, um, I should really put somewhere, so that people who don't have my computer can see it. 

It's not as exciting as I hoped: it turns out the data set is just a directory of every fire *department* in New York, not every fire *station.* So New York City, for example, is just one giant Voronoi cell (because it has just one fire department). And that kind of ruins the point, because what I was really hoping to see was the distribution of actual fire *stations.* That's interesting, because one of the most important things in fire protection is response time, which is mostly a function of geographical distance. 

I guess in most rural areas, fire departments tend to only have a single station. At least that's my experience in Tompkins County. The Ithaca Fire Department has four fire stations (downtown, Cornell/East Hill, Ithaca College/South Hill, and West Hill), but all of the outlying fire departments have a 1:1 department:station ratio. So maybe for rural areas it's a reasonable visualization of the nearest fire station. Fun fact: if you're in the vicinity of Taughannock Falls outside of Ithaca, the closest fire department/station, as the crow flies, is across the lake in Lansing.

Anyway, so the map as is basically looks like a population density map of New York State (modulo I guess the weird behavior that the right tail gets sort of chopped off). I was talking about all this with someone (gah, I forget who; I think it was at the party), and they pointed out that actually it was sort of an interesting visualization perhaps not of fire stations but of *social organization.* Meaning: all of these fire departments are more-or-less independent organizations, at least as far as fire protection goes. Why are they the size that they are? The [Cayuga Heights Fire Department](http://www.chfd.net/) serves maybe 10,000 people; FDNY, 10 million. Why isn't there a single fire department serving all of the 10 million people in Upstate New York? Alternatively, why aren't there 1,000 fire departments serving New York City? The obvious answer is something like "distance and geography," and that's probably mostly correct, but I think the general question of "what's the optimal scale for social organization?" is really interesting.

Maybe this is basically the same question as [the Nature of the Firm](https://en.wikipedia.org/wiki/The_Nature_of_the_Firm). Full disclosure, I've never read it, but from hearing lots of people talk about it, my understanding is that Coase's question is: why do companies exist? If markets are so great, why doesn't everyone individually bargain and negotiate for everything? After all, companies, internally, aren't markets. They're the opposite: top-down, communitarian, etc. So why do companies exist, and why are they the size that they are? 

And really all of this is the social equivalent of [crystallization](https://en.wikipedia.org/wiki/Recrystallization_(metallurgy)). Why are crystals in rocks the size that they are? What makes them sometimes really big? What makes them sometimes really small?

[Simulated annealing](https://en.wikipedia.org/wiki/Simulated_annealing) is a really good metaphor for a lot of things.

Speaking of Ronald Coase, [I hope I am still writing books at age 101](http://www.economist.com/news/leaders/21584985-anyone-who-cares-about-capitalism-and-economics-should-mourn-death-ronald-coase-man). RIP. Dad says that Hans Bethe was still coming into the office five days a week well into his 90s. Role models.

Anyway. In the category of "small but really useful things that I should have learned a long time ago" (previously: ternary operators): Python's `SimpleHTTPServer`. So in the past, when I've had to use a local web server for some sort of project (usually because there's an AJAX call or something that gets fussy about cross-domain requests), I've used Mac OS X's built-in Apache installation. That's perfectly fine, although it requires that everything be in OS X's `~/Sites` directory (which I could probably change in some config file somewhere, but whatever). And of course it requires starting it, too (which is just pressing a button somewhere in System Preferences). 

Anyway, it turns out that Python comes with a MAGICAL BUILT-IN MODULE THAT SOLVES EVERY PROBLEM! Suppose you want to start running a local web server from some random directory. (This is exactly what I realized I needed to do when Chrome started refusing to pull in my fire department data.) Just navigate to the relevant folder, type in `python -m SimpleHTTPServer 8000`, and BAM! You've got a web server running on port 8000! (Or whatever port you like.) And then, rather than opening the file directly in your browser, you can let `SimpleHTTPServer` serve them up to you, at `http://localhost:8000/`! No fussy configuration! No mess! Just one single line! Magical.

I should probably organize these blog posts, visually, a bit more. Oh well. Next topic: I presented on Thursday! I didn't really have anything new to present, so I showed an old project, my [bike gear visualizer](http://www.andrusia.com/gearseer). It went really well! I made some slides to explain parts of it, and they were really good slides! It occurs to me that I should really give the Gear Seer its own domain. I really like it, and am really proud if it. (All of the other gear calculators on the internet are TERRIBLE and TOTALLY DIFFERENT.) Oooh, I see that `gearseer.io` is still available! I also really want to re-write it. I've rewritten it two or three times, and each time I've thought, "that old code was so horrible! This new code is so much better!" And yet today when I look at it, I think, "This old code is so horrible! I duplicate so much functionality that D3 provides! (And provides in a less-buggy way.)" So, there's something to do.

This week we get a new batch of kiddies at RC! I'm excited to meet them! My goals for this week are 1) finally get back to and finish that polar-coordinated-Tetris implementation, 2) actually force myself to do some Haskell (please, Andrew!), and sign up for that EdX course, and 3) come up with more goals!