---
published: true
title: Recurse Center, Day 2
layout: post
---
1. I solved seven of the [99 Problems in Haskell](https://wiki.haskell.org/99_questions/) today! Hooray! I spent the morning reading through more of [Learn You A Haskell](http://learnyouahaskell.com) (well, really just re-reading the stuff I read yesterday, but more actively reading it, and playing around in the interpreter), as well as working on the 99 problems.

    I apparently missed the first meeting yesterday of the dozen or so people at RC who want to learn Haskell, but there was a second meeting this afternoon. The topic? 99 Problems in Haskell! Apparently yesterday they had paired up to work on solutions to the first half-dozen or so. What a fortuitous coincidence! (Although it would have been nice to have paired on the problem–trying to comprehend Haskell's type errors was, uh, tricky and stressful.) So today we presented and talked about the solutions. I didn't present any of mine, though, and we really only had time for two or three, because the problems (as intended) served as a motivation for talking about various elements of Haskell (in particular, [memoization](https://en.wikipedia.org/wiki/Memoization) and laziness, [currying](https://en.wikipedia.org/wiki/Currying), and cases versus guards in function syntax. 

    Algorithmically the problems were all straightforward (but fun and pretty!) examples of recursion. No `for` loops in Haskell! Everything must be recursive.

    Also, Haskell supports lists of infinite length. It can do this because it doesn't actually *calculate* such lists when you define them. You can define a list like `z = the odd integers that are also multiples of 17,` and then use `z` in some other context, and Haskell only evaluates as much of `z` as it needs to give its final output. There's some connection (a humorous one? a deep one?) to all of those amazing mathematical ideas of infinite sets; I don't yet know what it is. (Can I ask `ghci` if a list of all the integers and a list of all the even integers have the same cardinality???)

    Yesterday I had an idea for a good basic intro-to-Haskell project: writing a symbolic differentiator. I.e., something that can take in input like `a^5 + sin(b) + log(c)` and return `5a^4 + cos(b) + 1/c`. I remember reading one that someone had written in a few hundred lines of JavaScript and getting really excited. It shouldn't be that hard, and the parsing and the recursion will make it moderately interesting. (But I'm terrified about not coming up with other ideas for projects that I can be passionate about and can get abstracted into. Luckily I'm not alone, and tomorrow at noon someone is leading a "How to Choose a Project" seminar!)

2. I had a fun half-hour walk and coffee with John Workman, one of RC's facilitators–we talked about how to build successful communities ("it's not so much 'one weird trick' as it is a series of small, deliberate actions, repeated over time"), and our various experiences with Upstate New York (he got married in Rochester last summer). 

    He asked me what I thought of RC so far, and I said that it was more or less what I expected, but that the particular thing I really like is RC's focus on the emotional/psychological side of learning technical material. Learning technical stuff (math, science, CS, etc.) is intellectually difficult, and because it's intellectually difficult, it can be emotionally difficult. RC acknowledges this, and works (explicitly, institutionally) to create the kinds of social structures that help alleviate the emotional/psychological difficulties of learning hard stuff. (I want to write more about this, but I don't seem to be particularly articulate right now, so rather than let this paragraph turn into a disaster I will just give the short version and maybe write more later.)

    John also suggests I talk to Michael Nielsen, RC's current Research Fellow, when he gets back. "He used to be a theoretical physicist and has done all this cool work with Bret Victor on visualizing ways of thinking about math!"

3. What I *didn't* do today was find an apartment. Or, for that matter, do any more looking. I did hear back (actually this was last night) from that place in Bed-Stuy; I'll go take a look at Friday noon. My (weak) excuse is that the [Listings Project](https://www.listingsproject.com/) email comes out on Wednesdays. So tomorrow I'll send out a bunch of emails. (*Yes, you will!*)

    I'm also still not convinced that I need a new computer. I *am* convinced that I can never again attempt to read a news site on the ArchaeoBook (aaaaaagh! so much JavaScript!), but for just writing and running Haskell and reading basic web pages...

4. I took the F today. But only to 63rd and Lex; I walked the remainder, and it took an hour each way. This morning I had some of M.'s cold-brew green tea. He keeps a martini shaker full of it in his fridge. He tops it off every time he pours some out, and changes the tea leaves every couple of days. The Times ran a cooking article today about "[How to Roast Cauliflower (The Whole Thing)](http://www.nytimes.com/2016/01/06/dining/roasted-cauliflower-recipe-video.html), with the caption, "A whole roasted cauliflower behaves very much like a roast of meat, in the oven and on the table." I want to take a field trip to Marble Hill–[the only part of Manhattan that's not in Manhattan](http://www.nytimes.com/2012/11/18/nyregion/attached-to-the-bronx-but-legally-in-manhattan.html)